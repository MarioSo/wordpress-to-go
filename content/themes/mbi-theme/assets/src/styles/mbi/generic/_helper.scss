/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesnâ€™t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */


/**
 * Add/remove floats
 */
.float--right   { float: right; }
.float--left    { float: left; }
.float--none    { float: none; }


/**
 * Text alignment
 */
.text--left     { text-align: left; }
.text--center   { text-align: center; }
.text--right    { text-align: right; }


/**
 * Add/remove margins
 */
.push           { margin:       $base-spacing-unit; }
.push--top      { margin-top:   $base-spacing-unit; }
.push--right    { margin-right: $base-spacing-unit; }
.push--bottom   { margin-bottom:$base-spacing-unit; }
.push--left     { margin-left:  $base-spacing-unit; }
.push--ends     { margin-top:   $base-spacing-unit; margin-bottom:$base-spacing-unit; }
.push--sides    { margin-right: $base-spacing-unit; margin-left:  $base-spacing-unit; }

.push-half          { margin:       $half-spacing-unit; }
.push-half--top     { margin-top:   $half-spacing-unit; }
.push-half--right   { margin-right: $half-spacing-unit; }
.push-half--bottom  { margin-bottom:$half-spacing-unit; }
.push-half--left    { margin-left:  $half-spacing-unit; }
.push-half--ends    { margin-top:   $half-spacing-unit; margin-bottom:$half-spacing-unit; }
.push-half--sides   { margin-right: $half-spacing-unit; margin-left:  $half-spacing-unit; }

.flush          { margin:       0; }
.flush--top     { margin-top:   0; }
.flush--right   { margin-right: 0; }
.flush--bottom  { margin-bottom:0; }
.flush--left    { margin-left:  0; }
.flush--ends    { margin-top:   0; margin-bottom:0; }
.flush--sides   { margin-right: 0; margin-left:  0; }


/**
 * Add/remove paddings
 */
.soft           { padding:       $base-spacing-unit; }
.soft--top      { padding-top:   $base-spacing-unit; }
.soft--right    { padding-right: $base-spacing-unit; }
.soft--bottom   { padding-bottom:$base-spacing-unit; }
.soft--left     { padding-left:  $base-spacing-unit; }
.soft--ends     { padding-top:   $base-spacing-unit; padding-bottom:$base-spacing-unit; }
.soft--sides    { padding-right: $base-spacing-unit; padding-left:  $base-spacing-unit; }

.soft-half           { padding:       $half-spacing-unit; }
.soft-half--top      { padding-top:   $half-spacing-unit; }
.soft-half--right    { padding-right: $half-spacing-unit; }
.soft-half--bottom   { padding-bottom:$half-spacing-unit; }
.soft-half--left     { padding-left:  $half-spacing-unit; }
.soft-half--ends     { padding-top:   $half-spacing-unit; padding-bottom:$half-spacing-unit; }
.soft-half--sides    { padding-right: $half-spacing-unit; padding-left:  $half-spacing-unit; }

.hard           { padding:       0; }
.hard--top      { padding-top:   0; }
.hard--right    { padding-right: 0; }
.hard--bottom   { padding-bottom:0; }
.hard--left     { padding-left:  0; }
.hard--ends     { padding-top:   0; padding-bottom:0; }
.hard--sides    { padding-right: 0; padding-left:  0; }

/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps {
    text-transform: uppercase;
}

.lowercase{
    text-transform: lowercase;
}

.block{
    display: block;
}

.pos--relative{
    position: relative;
}

.box{
    box-sizing: border-box;
}

.own-layer{
    transform: translate3d(0, 0, 0);
}

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
@mixin visuallyhidden {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
}
.visuallyhidden {
    @include visuallyhidden;
}