@charset "UTF-8";
/*------------------------------------*\
		BASE.CSS
\*------------------------------------*/
/*
	*
	* Good artists copy; great artists steal.
	* - Pablo Picasso (probably)
	*
	* base.css is heavily inspired by
	* inuitcss.com (@inuitcss)
	* thank you Harry! @csswizardry is
	* a genius!
	*
	* check it out at https://github.com/inuitcss
	*
	*/
/**
 * Default configuration of the framework
 * do not change this file, provide a own
 * configuration file for you project.
 */
/*------------------------------------*\
	$DEFAULTS
\*------------------------------------*/
/**
 * Default variables. Do not to override them here.
 * Provide a '_site-default.scss' to configure base.css.
 */
/*------------------------------------*\
	$DEBUG
\*------------------------------------*/
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to 'true' or 'false'.
 */
/*------------------------------------*\
	$BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt 'box-sizing:border-box;' as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
	$BASE
\*------------------------------------*/
/**
 * Base stuff
 */
/*
 * Lead paragraph for introductory texts (usualla a paragraph
 * which is slightly larger)
 */
/*------------------------------------*\
	$FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/*
 * $base-spacing-unit and $half-spacing-unit are used to
 * calculate margins and paddings generated by basecss's classes.
 */
/**
 * Sets single direction margin (bottom)
 *
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/*
 * Generates margin and padding classes
 * for details see: trumps/spacing.
 */
/**
 * color your life!
 */
/*------------------------------------*\
	$RESPONSIVE
\*------------------------------------*/
/**
 * Tell base.css when breakpoints start.
 */
/*------------------------------------*\
	$OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/**
 * tools: a helping hand.
 */
/*------------------------------------*\
		$MATH HELPER
\*------------------------------------*/
/**
 * Doing some math.
 */
/*
 * Halve and double numbers, returning rounded integers.
 *
 * Usage:
 * .foo {
 * 	padding: quarter(4px);
 * 	padding: halve(4px);
 * 	padding: double(4px);
 * 	padding: quadruple(4px);
 * }
 */
/*------------------------------------*\
		$CONVERSION HELPER
\*------------------------------------*/
/**
 * Got px? Need em? Here we go.
 *
 * Dependencies: $base-font-sizes musst be defined in e.g. _defaults.scss.
 */
/*
 * Convert PX units to EMs.
 *
 * Usage: margin-right: pem(16);
*/
/*------------------------------------*\
	$SIZES Mixins
\*------------------------------------*/
/*
 *
 */
/* See http://mrdanadams.com/2012/pixel-ems-css-conversion-sass-mixin/ */
/* Used to convert PX to EMs for multiple properties or values or both.
$base is an optional measurement that allows making measurements relative to the parent font size rather than the current. Also accepts a list of lists (instead a list of values) for properties that accept multiple lists of values. Only numbers of converted; everything else is passed through.

Examples:

@include scale(line-height, 30)
@include scale(line-height, 30, 16)
@include scale(width height, 125);
@include scale(padding, 0 25, 16);
@include scale(text-shadow, (#0d6e28 1 1) (#777 0 0 2), 16);
@include scale(box-shadow, (inset 0 0 0 1 #2a9022) (inset 0 0 3 #459966), 16);
*/
/**
 * Generic things like a reset or normalize
 */
/*! normalize.css v3.0.2 | MIT License | git.io/normalize */
/**
 * Remove default margin.
 */
body {
  margin: 0;
}

/* HTML5 display definitions
	 ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block;
}

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */
}

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none;
}

/* Links
	 ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent;
}

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* Text-level semantics
	 ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic;
}

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* Embedded content
	 ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0;
}

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden;
}

/* Grouping content
	 ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/* Forms
	 ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */
}

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible;
}

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none;
}

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal;
}

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto;
}

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/**
 * Define consistent border.
 */
fieldset {
  border: none;
}

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto;
}

/*------------------------------------*\
	$RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr,
.box,
.block {
  margin: 0;
  padding: 0;
  /**
   * Where `margin-bottom` is concerned,this value will be the same as the
   * base line-height. This allows us to keep a consistent vertical rhythm.
   * As per: csswizardry.com/2012/06/single-direction-margin-declarations
   */
  margin-bottom: 20px;
  margin-bottom: 1.25rem;
}

ul {
  list-style-type: none;
}

/**
 * Give a help cursor to elements that give extra info on ':hover'.
 */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

.input--text:active,
.input--text:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none;
}

/**
 * The base
 */
/*------------------------------------*\
		#PAGE
\*------------------------------------*/
/**
 * 1. Set default font to the one given in the configuration.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 * 3. Force scrollbars to always be visible to prevent awkward ‘jumps’ when
 *    navigating between pages that do/do not have enough content to produce
 *    scrollbars naturally.
 * 4. Ensure the page always fills at least the entire height of the viewport.
 * 5. Prevent certain mobile browsers from automatically zooming fonts.
 * 6. Fonts on OSX will look more consistent with other systems that do not
 *    render text using sub-pixel anti-aliasing.
 */
html {
  font: 1em/1.25 sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  background-color: #fff;
  color: #000;
  overflow-y: scroll;
  /* [3] */
  min-height: 100%;
  /* [4] */
  -webkit-text-size-adjust: 100%;
  /* [5] */
  -ms-text-size-adjust: 100%;
  /* [5] */
  -moz-osx-font-smoothing: grayscale;
  /* [6] */
  -webkit-font-smoothing: antialiased;
  /* [6] */
}

/*------------------------------------*\
		#HEADINGS
\*------------------------------------*/
/**
 * Headings 1–6, with corresponding Greek-alphabet abstract classes for double-
 * stranded heading hierarchy: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 */
h1,
.alpha {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 2.25em;
}

h2,
.beta {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 1.875em;
}

h3,
.gamma {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 1.5em;
}

h4,
.delta {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 1.25em;
}

h5,
.epsilon {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 1em;
}

h6,
.zeta {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 0.875em;
}

/*------------------------------------*\
		#PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger: en.wikipedia.org/wiki/Lede_(news)
 */
.lead {
  /* unwrap lists for values that have multiple list of values such as text-shadow */
  font-size: 1.125em;
}

/*------------------------------------*\
		#IMAGES
\*------------------------------------*/
/**
 * 1. Fluid images for responsive purposes.
 * 2. Offset `alt` text from surrounding copy.
 * 3. Setting `vertical-align` removes the whitespace that appears under `img`
 *    elements when they are dropped into a page as-is. Safer alternative to
 *    using `display: block;`.
 */
img {
  max-width: 100%;
  /* [1] */
  font-style: italic;
  /* [2] */
  vertical-align: middle;
  /* [3] */
}

/**
 * 1. Google Maps breaks if `max-width: 100%` acts upon it; use their selector
 *    to remove the effects.
 * 2. If a `width` and/or `height` attribute have been explicitly defined, let’s
 *    not make the image fluid.
 */
.gm-style img,
img[width],
img[height] {
  /* [2] */
  max-width: none;
}

/**
 * Reusable Objects
 */
/*------------------------------------*\
		#LAYOUT
\*------------------------------------*/
/**
 * The basecss layout system uses `box-sizing: border-box;` and
 * `float: left;` for its grid system. Combine the layout items with
 * the widths found in `trumps/widths`.
 *
 * Usage:
 * <div class="layout">
 * 	<div class="layout__item 1/2"> 1st Half </div>
 * 	<div class="layout__item 1/2"> 2nd Half </div>
 * </div>
 *
 */
/**
 * Begin a layout group.
 */
.layout {
  list-style: none;
  margin: 0;
  padding: 0;
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Full-width unless told to behave otherwise.
 * 3. Required to combine fluid widths and fixed gutters.
 */
.layout__item {
  float: left;
  /* [1] */
  display: block;
  /* [2] */
  -webkit-box-sizing: border-box;
  /* [3] */
  -moz-box-sizing: border-box;
  /* [3] */
  box-sizing: border-box;
  /* [3] */
}

/**
 * Trumps
 */
/*------------------------------------*\
	$HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn't already have a class to which you could apply this
 * styling, e.g. if you need to float '.main-nav' left then add 'float:left;' to
 * that ruleset as opposed to adding the '.float--left' class to the markup.
 *
 * A lot of these classes carry '!important' as you will always want them to win
 * out over other selectors.
 */
/**
 * Add/remove floats
 */
.float {
  float: left !important;
}

.float--right {
  float: right !important;
}

.float--none {
  float: none !important;
}

/**
 * color your life.
 */
.color--highlight {
  color: #000 !important;
}

/**
 * Text alignment
 */
.text--left {
  text-align: left !important;
}

.text--center {
  text-align: center !important;
}

.text--right {
  text-align: right !important;
}

/**
 * Apply capital case to an element (usually a 'strong').
 */
.caps {
  text-transform: uppercase !important;
}

.lowercase {
  text-transform: lowercase !important;
}

.bb {
  box-sizing: border-box !important;
}

.will-animate {
  transform: translate3d(0, 0, 0);
}

.hide {
  display: none !important;
}

/**
 * Hide content off-screen without resorting to 'display:none;', also provide
 * breakpoint specific hidden elements.
 */
.visuallyhidden {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

/*------------------------------------*\
		$CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.clearfix:after, .layout:after {
  content: '';
  display: table;
  clear: both;
}

/*------------------------------------*\
		#WIDTHS
\*------------------------------------*/
/**
 * A series of width helper classes that you can use to size things like grid
 * systems. Classes can take a fraction-like format (e.g. `.2/3`) or a spoken-
 * word format (e.g. `two-thirds`). Toggle formats by overriding the
 * `$inuit-use-fractions` variable defined below.
 */
/**
 * Whole.
 */
[class~="1/1"],
.full {
  width: 100%;
}

/**
 * Halves.
 */
[class~="1/2"] {
  width: 50%;
}

/**
 * Thirds.
 */
[class~="1/3"] {
  width: 33.3333333%;
}

[class~="2/3"] {
  width: 66.6666666%;
}

@media screen and (max-width: 719px) {
  /**
   * Whole.
   */
  [class~="palm-1/1"],
  .palm-full {
    width: 100%;
  }

  /**
   * Halves.
   */
  [class~="palm-1/2"] {
    width: 50%;
  }

  /**
   * Thirds.
   */
  [class~="palm-1/3"] {
    width: 33.3333333%;
  }

  [class~="palm-2/3"] {
    width: 66.6666666%;
  }
}
@media screen and (min-width: 720px) and (max-width: 1023px) {
  /**
   * Whole.
   */
  [class~="lap-1/1"],
  .lap-full {
    width: 100%;
  }

  /**
   * Halves.
   */
  [class~="lap-1/2"] {
    width: 50%;
  }

  /**
   * Thirds.
   */
  [class~="lap-1/3"] {
    width: 33.3333333%;
  }

  [class~="lap-2/3"] {
    width: 66.6666666%;
  }
}
@media screen and (min-width: 720px) {
  /**
   * Whole.
   */
  [class~="lap-and-up-1/1"],
  .lap-and-up-full {
    width: 100%;
  }

  /**
   * Halves.
   */
  [class~="lap-and-up-1/2"] {
    width: 50%;
  }

  /**
   * Thirds.
   */
  [class~="lap-and-up-1/3"] {
    width: 33.3333333%;
  }

  [class~="lap-and-up-2/3"] {
    width: 66.6666666%;
  }
}
@media screen and (max-width: 1023px) {
  /**
   * Whole.
   */
  [class~="portable-1/1"],
  .portable-full {
    width: 100%;
  }

  /**
   * Halves.
   */
  [class~="portable-1/2"] {
    width: 50%;
  }

  /**
   * Thirds.
   */
  [class~="portable-1/3"] {
    width: 33.3333333%;
  }

  [class~="portable-2/3"] {
    width: 66.6666666%;
  }
}
@media screen and (min-width: 1024px) {
  /**
   * Whole.
   */
  [class~="desk-1/1"],
  .desk-full {
    width: 100%;
  }

  /**
   * Halves.
   */
  [class~="desk-1/2"] {
    width: 50%;
  }

  /**
   * Thirds.
   */
  [class~="desk-1/3"] {
    width: 33.3333333%;
  }

  [class~="desk-2/3"] {
    width: 66.6666666%;
  }
}
/*------------------------------------*\
		#SPACING
\*------------------------------------*/
/**
 * Dependencies:
 * - tools/function/_math-helper.scss
 * - tools/function/_conversion-helper.scss
 */
/**
 * Margin and padding helper classes. Use these to tweak layout on a micro
 * level.
 *
 * `.(m|p)(t|r|b|l|h|v)(-|+|0) {}` = margin/padding top/right/bottom/left/horizontal/vertical less/more/none
 */
.m {
  margin: 1.25em !important;
}

.mt {
  margin-top: 1.25em !important;
}

.mr {
  margin-right: 1.25em !important;
}

.mb {
  margin-bottom: 1.25em !important;
}

.ml {
  margin-left: 1.25em !important;
}

.mh {
  margin-right: 1.25em !important;
  margin-left: 1.25em !important;
}

.mv {
  margin-top: 1.25em !important;
  margin-bottom: 1.25em !important;
}

.m- {
  margin: 0.625em !important;
}

.mt- {
  margin-top: 0.625em !important;
}

.mr- {
  margin-right: 0.625em !important;
}

.mb- {
  margin-bottom: 0.625em !important;
}

.ml- {
  margin-left: 0.625em !important;
}

.mh- {
  margin-right: 0.625em !important;
  margin-left: 0.625em !important;
}

.mv- {
  margin-top: 0.625em !important;
  margin-bottom: 0.625em !important;
}

.m\+ {
  margin: 2.5em !important;
}

.mt\+ {
  margin-top: 2.5em !important;
}

.mr\+ {
  margin-right: 2.5em !important;
}

.mb\+ {
  margin-bottom: 2.5em !important;
}

.ml\+ {
  margin-left: 2.5em !important;
}

.mh\+ {
  margin-right: 2.5em !important;
  margin-left: 2.5em !important;
}

.mv\+ {
  margin-top: 2.5em !important;
  margin-bottom: 2.5em !important;
}

.m0 {
  padding: 0 !important;
}

.mt0 {
  padding-top: 0 !important;
}

.mr0 {
  padding-right: 0 !important;
}

.mb0 {
  padding-bottom: 0 !important;
}

.ml0 {
  padding-left: 0 !important;
}

.mh0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.mv0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.p {
  padding: 1.25em !important;
}

.pt {
  padding-top: 1.25em !important;
}

.pr {
  padding-right: 1.25em !important;
}

.pb {
  padding-bottom: 1.25em !important;
}

.pl {
  padding-left: 1.25em !important;
}

.ph {
  padding-right: 1.25em !important;
  padding-left: 1.25em !important;
}

.pv {
  padding-top: 1.25em !important;
  padding-bottom: 1.25em !important;
}

.p- {
  padding: 0.625em !important;
}

.pt- {
  padding-top: 0.625em !important;
}

.pr- {
  padding-right: 0.625em !important;
}

.pb- {
  padding-bottom: 0.625em !important;
}

.pl- {
  padding-left: 0.625em !important;
}

.ph- {
  padding-right: 0.625em !important;
  padding-left: 0.625em !important;
}

.pv- {
  padding-top: 0.625em !important;
  padding-bottom: 0.625em !important;
}

.p\+ {
  padding: 2.5em !important;
}

.pt\+ {
  padding-top: 2.5em !important;
}

.pr\+ {
  padding-right: 2.5em !important;
}

.pb\+ {
  padding-bottom: 2.5em !important;
}

.pl\+ {
  padding-left: 2.5em !important;
}

.ph\+ {
  padding-right: 2.5em !important;
  padding-left: 2.5em !important;
}

.pv\+ {
  padding-top: 2.5em !important;
  padding-bottom: 2.5em !important;
}

.p0 {
  padding: 0 !important;
}

.pt0 {
  padding-top: 0 !important;
}

.pr0 {
  padding-right: 0 !important;
}

.pb0 {
  padding-bottom: 0 !important;
}

.pl0 {
  padding-left: 0 !important;
}

.ph0 {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

.pv0 {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

/*# sourceMappingURL=main.css.map */
